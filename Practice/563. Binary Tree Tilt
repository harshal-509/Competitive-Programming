#LEETCODE
"""
Problem Statement:

Given the root of a binary tree, return the sum of every tree node's tilt.

The tilt of a tree node is the absolute difference between the sum of all left subtree node values and all right subtree node values. If a node does not have a left child, then the sum of the left subtree node values is treated as 0. The rule is similar if there the node does not have a right child.

"""
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.ans=0
    def findTilt(self, root: Optional[TreeNode]) -> int:
        def help(root):
            if(root==None):
                return 0
            help(root.left)
            help(root.right)
            x=0
            y=0
            if(root.left!=None):
                root.val+=root.left.val
                x=root.left.val
            if(root.right!=None):
                root.val+=root.right.val
                y=root.right.val
            self.ans+=abs(x-y)
        help(root)
        return self.ans
